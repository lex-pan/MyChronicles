// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MyChroniclesApi.Services.Urls;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace MyChroniclesApi.Migrations
{
    [DbContext(typeof(UrlsService))]
    [Migration("20240525194034_CreateDecipherUrlsTable")]
    partial class CreateDecipherUrlsTable
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("DOMIdentifier", b =>
                {
                    b.Property<DateTime>("id")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("index")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("tag")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("id");

                    b.ToTable("DOMIdentifier");
                });

            modelBuilder.Entity("DecipherSteps", b =>
                {
                    b.Property<DateTime>("id")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("DecipherUrlsDomain")
                        .HasColumnType("text");

                    b.Property<string>("DecipherUrlsDomain1")
                        .HasColumnType("text");

                    b.Property<string>("DecipherUrlsDomain2")
                        .HasColumnType("text");

                    b.Property<string>("word_end")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("word_start")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("word_to_find")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("id");

                    b.HasIndex("DecipherUrlsDomain");

                    b.HasIndex("DecipherUrlsDomain1");

                    b.HasIndex("DecipherUrlsDomain2");

                    b.ToTable("DecipherSteps");
                });

            modelBuilder.Entity("MyChroniclesApi.Models.DecipherUrls", b =>
                {
                    b.Property<string>("Domain")
                        .HasColumnType("text");

                    b.Property<string>("Selection_type")
                        .HasColumnType("text");

                    b.Property<DateTime>("date_time")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("dom_selectorid")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Domain");

                    b.HasIndex("dom_selectorid");

                    b.ToTable("chronicle_extension_decipher");
                });

            modelBuilder.Entity("DecipherSteps", b =>
                {
                    b.HasOne("MyChroniclesApi.Models.DecipherUrls", null)
                        .WithMany("Chapter_start_end")
                        .HasForeignKey("DecipherUrlsDomain");

                    b.HasOne("MyChroniclesApi.Models.DecipherUrls", null)
                        .WithMany("Entertainment_category")
                        .HasForeignKey("DecipherUrlsDomain1")
                        .HasConstraintName("FK_DecipherSteps_chronicle_extension_decipher_DecipherUrlsDom~1");

                    b.HasOne("MyChroniclesApi.Models.DecipherUrls", null)
                        .WithMany("Title_start_end")
                        .HasForeignKey("DecipherUrlsDomain2")
                        .HasConstraintName("FK_DecipherSteps_chronicle_extension_decipher_DecipherUrlsDom~2");
                });

            modelBuilder.Entity("MyChroniclesApi.Models.DecipherUrls", b =>
                {
                    b.HasOne("DOMIdentifier", "dom_selector")
                        .WithMany()
                        .HasForeignKey("dom_selectorid");

                    b.Navigation("dom_selector");
                });

            modelBuilder.Entity("MyChroniclesApi.Models.DecipherUrls", b =>
                {
                    b.Navigation("Chapter_start_end");

                    b.Navigation("Entertainment_category");

                    b.Navigation("Title_start_end");
                });
#pragma warning restore 612, 618
        }
    }
}
